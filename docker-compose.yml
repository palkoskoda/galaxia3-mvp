version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: galaxia3-postgres
    environment:
      POSTGRES_DB: galaxia3
      POSTGRES_USER: galaxia3
      POSTGRES_PASSWORD: galaxia3_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - galaxia3-network

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: galaxia3-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - galaxia3-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: galaxia3-backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://galaxia3:galaxia3_password@postgres:5432/galaxia3
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - JWT_REFRESH_SECRET=dev-refresh-secret-change-in-production
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - CORS_ORIGIN=http://localhost:5173
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - galaxia3-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: galaxia3-frontend
    environment:
      - VITE_API_URL=http://localhost:3000/api
      - VITE_STRIPE_PUBLISHABLE_KEY=${VITE_STRIPE_PUBLISHABLE_KEY}
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - galaxia3-network

volumes:
  postgres_data:
  redis_data:

networks:
  galaxia3-network:
    driver: bridge